<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sae.express.dao.iface.PickUpInfoModelMapper" >
  <resultMap id="BaseResultMap" type="com.sae.express.dao.model.PickUpInfoModel" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="pick_up_id" property="pickUpId" jdbcType="INTEGER" />
    <result column="express_code" property="expressCode" jdbcType="VARCHAR" />
    <result column="express" property="express" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="express_date" property="expressDate" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pick_up_id, express_code, express, count, express_date, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sae.express.dao.model.PickUpInfoModelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pick_up_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sae.express.dao.model.PickUpInfoModelExample" >
    delete from pick_up_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sae.express.dao.model.PickUpInfoModel" >
    insert into pick_up_info (id, pick_up_id, express_code, 
      express, count, express_date, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{pickUpId,jdbcType=INTEGER}, #{expressCode,jdbcType=VARCHAR}, 
      #{express,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{expressDate,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sae.express.dao.model.PickUpInfoModel" >
    insert into pick_up_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pickUpId != null" >
        pick_up_id,
      </if>
      <if test="expressCode != null" >
        express_code,
      </if>
      <if test="express != null" >
        express,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="expressDate != null" >
        express_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pickUpId != null" >
        #{pickUpId,jdbcType=INTEGER},
      </if>
      <if test="expressCode != null" >
        #{expressCode,jdbcType=VARCHAR},
      </if>
      <if test="express != null" >
        #{express,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="expressDate != null" >
        #{expressDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sae.express.dao.model.PickUpInfoModelExample" resultType="java.lang.Integer" >
    select count(*) from pick_up_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pick_up_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pickUpId != null" >
        pick_up_id = #{record.pickUpId,jdbcType=INTEGER},
      </if>
      <if test="record.expressCode != null" >
        express_code = #{record.expressCode,jdbcType=VARCHAR},
      </if>
      <if test="record.express != null" >
        express = #{record.express,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.expressDate != null" >
        express_date = #{record.expressDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pick_up_info
    set id = #{record.id,jdbcType=INTEGER},
      pick_up_id = #{record.pickUpId,jdbcType=INTEGER},
      express_code = #{record.expressCode,jdbcType=VARCHAR},
      express = #{record.express,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      express_date = #{record.expressDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>